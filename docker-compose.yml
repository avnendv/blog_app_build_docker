services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    env_file: ./.env
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
    #   - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_DOCKER_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - backend

  blog_api:
    depends_on:
      - mongodb
    container_name: blog_api
    build: ../blog_api
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $API_PORT:$API_PORT
    environment:
      - MONGO_URL=mongodb://mongodb:${MONGODB_DOCKER_PORT}/${MONGODB_DATABASE}
      # - MONGO_HOST=mongodb
      # - MONGO_USER=$MONGODB_USER
      # - MONGODB_PASSWORD=$MONGODB_PASSWORD
      # - MONGO_DB_NAME=$MONGODB_DATABASE
      # - MONGODB_PORT=$MONGODB_PORT
      - PORT=$API_PORT
    networks:
      - backend
      - frontend
      - frontend-manage

  blog_client:
    depends_on:
      - blog_api
    container_name: blog_client
    build:
      context: ../blog_client
      args:
        - CLIENT_PORT=$CLIENT_PORT
        - CLIENT_BASE_URL=$CLIENT_BASE_URL
        - CLIENT_BASE_API=$BLOG_API_BASE_CLIENT
    ports:
      - $CLIENT_PORT:80
    networks:
      - frontend

  blog_manage:
    depends_on:
      - blog_api
    container_name: blog_manage
    build:
      context: ../blog_manage
      args:
        - CLIENT_PORT=$MANAGE_PORT
        - CLIENT_BASE_URL=$MANAGE_BASE_URL
        - CLIENT_BASE_API=$BLOG_API_BASE_ADMIN
    ports:
      - $MANAGE_PORT:80
    networks:
      - frontend-manage

volumes:
  db:

networks:
  backend:
  frontend:
  frontend-manage:
